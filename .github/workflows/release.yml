name: Release
on:
  release:
    types: [created]

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/amd64
        goos: [linux, windows]
        goarch: ["386", amd64, arm]
          exclude:
            - goarch: "arm"
              goos: windows

    steps:
      - uses: actions/checkout@v2
      - uses: wangyoucao577/go-release-action@v1.18
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "https://golang.org/dl/go1.15.linux-amd64.tar.gz"
          project_path: "./cmd/tc/"
          binary_name: "seata-golang"

  docker-build:
      strategy:
          matrix:
              go-version: [ 1.15.x ]
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      steps:
          - name: Docker Build
            if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/v2' || contains(github.ref, 'release') }}
            env:
                DOCKER_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
            run: |
                go mod tidy
                REGISTRY=$DOCKER_USERNAME make build-images

          - name: Push
            if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/v2' || contains(github.ref, 'release') }}
            env:
                DOCKER_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
                DOCKER_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
                COMMIT: ${{ github.sha }}
            run: |
                echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                REGISTRY=$DOCKER_USERNAME make push
