//
// Licensed to the Apache Software Foundation (ASF) under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// The ASF licenses this file to You under the Apache License, Version 2.0
// (the "License"); you may not use this file except in compliance with
// the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v6.30.2
// source: branchType.proto

package transaction

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PublishRequest is a publish request.
type BranchTypeProto int32

const (
	BranchTypeProto_AT   BranchTypeProto = 0
	BranchTypeProto_TCC  BranchTypeProto = 1
	BranchTypeProto_SAGA BranchTypeProto = 2
)

// Enum value maps for BranchTypeProto.
var (
	BranchTypeProto_name = map[int32]string{
		0: "AT",
		1: "TCC",
		2: "SAGA",
	}
	BranchTypeProto_value = map[string]int32{
		"AT":   0,
		"TCC":  1,
		"SAGA": 2,
	}
)

func (x BranchTypeProto) Enum() *BranchTypeProto {
	p := new(BranchTypeProto)
	*p = x
	return p
}

func (x BranchTypeProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BranchTypeProto) Descriptor() protoreflect.EnumDescriptor {
	return file_branchType_proto_enumTypes[0].Descriptor()
}

func (BranchTypeProto) Type() protoreflect.EnumType {
	return &file_branchType_proto_enumTypes[0]
}

func (x BranchTypeProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BranchTypeProto.Descriptor instead.
func (BranchTypeProto) EnumDescriptor() ([]byte, []int) {
	return file_branchType_proto_rawDescGZIP(), []int{0}
}

var File_branchType_proto protoreflect.FileDescriptor

var file_branchType_proto_rawDesc = []byte{
	0x0a, 0x10, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x22, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x73,
	0x65, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2a, 0x2c, 0x0a, 0x0f, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x54, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x43, 0x43, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x41,
	0x47, 0x41, 0x10, 0x02, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x61, 0x74, 0x61, 0x2f, 0x73, 0x65, 0x61, 0x74, 0x61, 0x2d, 0x67,
	0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67,
	0x72, 0x70, 0x63, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_branchType_proto_rawDescOnce sync.Once
	file_branchType_proto_rawDescData = file_branchType_proto_rawDesc
)

func file_branchType_proto_rawDescGZIP() []byte {
	file_branchType_proto_rawDescOnce.Do(func() {
		file_branchType_proto_rawDescData = protoimpl.X.CompressGZIP(file_branchType_proto_rawDescData)
	})
	return file_branchType_proto_rawDescData
}

var file_branchType_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_branchType_proto_goTypes = []interface{}{
	(BranchTypeProto)(0), // 0: org.apache.seata.protocol.protobuf.BranchTypeProto
}
var file_branchType_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_branchType_proto_init() }
func file_branchType_proto_init() {
	if File_branchType_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_branchType_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_branchType_proto_goTypes,
		DependencyIndexes: file_branchType_proto_depIdxs,
		EnumInfos:         file_branchType_proto_enumTypes,
	}.Build()
	File_branchType_proto = out.File
	file_branchType_proto_rawDesc = nil
	file_branchType_proto_goTypes = nil
	file_branchType_proto_depIdxs = nil
}
