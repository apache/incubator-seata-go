// Code generated by "stringer -type=SQLType"; DO NOT EDIT.

package types

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SQLType_Unknown-1]
	_ = x[SQLType_SELECT-2]
	_ = x[SQLType_INSERT-3]
	_ = x[SQLType_UPDATE-4]
	_ = x[SQLType_DELETE-5]
	_ = x[SQLType_SELECT_FOR_UPDATE-6]
	_ = x[SQLType_REPLACE-7]
	_ = x[SQLType_TRUNCATE-8]
	_ = x[SQLType_CREATE-9]
	_ = x[SQLType_DROP-10]
	_ = x[SQLType_LOAD-11]
	_ = x[SQLType_MERGE-12]
	_ = x[SQLType_SHOW-13]
	_ = x[SQLType_ALTER-14]
	_ = x[SQLType_RENAME-15]
	_ = x[SQLType_DUMP-16]
	_ = x[SQLType_DEBUG-17]
	_ = x[SQLType_EXPLAIN-18]
	_ = x[SQLType_PROCEDURE-19]
	_ = x[SQLType_DESC-20]
	_ = x[SQLType_SET-21]
	_ = x[SQLType_RELOAD-22]
	_ = x[SQLType_SELECT_UNION-23]
	_ = x[SQLType_CREATE_TABLE-24]
	_ = x[SQLType_DROP_TABLE-25]
	_ = x[SQLType_ALTER_TABLE-26]
	_ = x[SQLType_SELECT_FROM_UPDATE-27]
	_ = x[SQLType_MULTI_DELETE-28]
	_ = x[SQLType_MULTI_UPDATE-29]
	_ = x[SQLType_CREATE_INDEX-30]
	_ = x[SQLType_DROP_INDEX-31]
}

const _SQLType_name = "SQLType_UnknownSQLType_SELECTSQLType_INSERTSQLType_UPDATESQLType_DELETESQLType_SELECT_FOR_UPDATESQLType_REPLACESQLType_TRUNCATESQLType_CREATESQLType_DROPSQLType_LOADSQLType_MERGESQLType_SHOWSQLType_ALTERSQLType_RENAMESQLType_DUMPSQLType_DEBUGSQLType_EXPLAINSQLType_PROCEDURESQLType_DESCSQLType_SETSQLType_RELOADSQLType_SELECT_UNIONSQLType_CREATE_TABLESQLType_DROP_TABLESQLType_ALTER_TABLESQLType_SELECT_FROM_UPDATESQLType_MULTI_DELETESQLType_MULTI_UPDATESQLType_CREATE_INDEXSQLType_DROP_INDEX"

var _SQLType_index = [...]uint16{0, 15, 29, 43, 57, 71, 96, 111, 127, 141, 153, 165, 178, 190, 203, 217, 229, 242, 257, 274, 286, 297, 311, 331, 351, 369, 388, 414, 434, 454, 474, 492}

func (i SQLType) String() string {
	i -= 1
	if i < 0 || i >= SQLType(len(_SQLType_index)-1) {
		return "SQLType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _SQLType_name[_SQLType_index[i]:_SQLType_index[i+1]]
}
