// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.12
// source: at_grpc.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ATServiceBusinessClient is the client API for ATServiceBusiness service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ATServiceBusinessClient interface {
	UpdateDataSuccess(ctx context.Context, in *Params, opts ...grpc.CallOption) (*wrapperspb.BoolValue, error)
}

type aTServiceBusinessClient struct {
	cc grpc.ClientConnInterface
}

func NewATServiceBusinessClient(cc grpc.ClientConnInterface) ATServiceBusinessClient {
	return &aTServiceBusinessClient{cc}
}

func (c *aTServiceBusinessClient) UpdateDataSuccess(ctx context.Context, in *Params, opts ...grpc.CallOption) (*wrapperspb.BoolValue, error) {
	out := new(wrapperspb.BoolValue)
	err := c.cc.Invoke(ctx, "/ATServiceBusiness/UpdateDataSuccess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ATServiceBusinessServer is the server API for ATServiceBusiness service.
// All implementations must embed UnimplementedATServiceBusinessServer
// for forward compatibility
type ATServiceBusinessServer interface {
	UpdateDataSuccess(context.Context, *Params) (*wrapperspb.BoolValue, error)
	mustEmbedUnimplementedATServiceBusinessServer()
}

// UnimplementedATServiceBusinessServer must be embedded to have forward compatible implementations.
type UnimplementedATServiceBusinessServer struct {
}

func (UnimplementedATServiceBusinessServer) UpdateDataSuccess(context.Context, *Params) (*wrapperspb.BoolValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDataSuccess not implemented")
}
func (UnimplementedATServiceBusinessServer) mustEmbedUnimplementedATServiceBusinessServer() {}

// UnsafeATServiceBusinessServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ATServiceBusinessServer will
// result in compilation errors.
type UnsafeATServiceBusinessServer interface {
	mustEmbedUnimplementedATServiceBusinessServer()
}

func RegisterATServiceBusinessServer(s grpc.ServiceRegistrar, srv ATServiceBusinessServer) {
	s.RegisterService(&ATServiceBusiness_ServiceDesc, srv)
}

func _ATServiceBusiness_UpdateDataSuccess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ATServiceBusinessServer).UpdateDataSuccess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ATServiceBusiness/UpdateDataSuccess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ATServiceBusinessServer).UpdateDataSuccess(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

// ATServiceBusiness_ServiceDesc is the grpc.ServiceDesc for ATServiceBusiness service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ATServiceBusiness_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ATServiceBusiness",
	HandlerType: (*ATServiceBusinessServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateDataSuccess",
			Handler:    _ATServiceBusiness_UpdateDataSuccess_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "at_grpc.proto",
}
